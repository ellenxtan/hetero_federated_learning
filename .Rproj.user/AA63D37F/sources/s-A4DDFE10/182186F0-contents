rm(list=ls())
library(devtools)
library(roxygen2)

use_mit_license("Xiaoqing Tan")

# add dependent packages in DESCRIPTION
use_package("ranger")
use_package("data.table")
use_package("rpart")
use_package("rpart.plot")
use_package("rlang")
use_package("grf")
use_package("ggplot2")
use_package("magrittr")
use_package("dplyr")
use_package("tibble")
use_package("causalToolbox")
use_package("Matrix")
use_package("lmtest")
use_package("sandwich")


## add new functions in package
use_r("EnsemTree")
use_r("EnsemForest")
use_rcpp("GetHonestRcpp")
use_rcpp("PredHonestRcpp")
use_r("GenAugData")
use_r("GenSimData")
use_r("PlotTree")
use_r("PlotForestPred")
use_r("PlotForestImp")
use_r("BestLinearProj")
use_r("CheckHelpers")


## check functions
document()
load_all()
check()


## create example data stored in package
coord_id <- 1
K <- 20
SimDataLst <- list()
for (k in 1:K) {
    df <- GenSimData(k)
    SimDataLst[[k]] <- df
}

usethis::use_data(SimDataLst)
document()
# data(SimDataLst)



## examples
data(SimDataLst)
K <- length(SimDataLst)
covars <- grep("^X", names(SimDataLst[[1]]), value=TRUE)
fit_lst <- list()
for (k in 1:K) {
    df <- SimDataLst[[k]]
    fit_lst[[k]] <- grf::causal_forest(X=as.matrix(df[, covars, with=FALSE]), Y=df$Y, W=df$Z)
}

coord_id <- 1
coord_test <- GenSimData(coord_id)

coord_df <- SimDataLst[[coord_id]]
aug_df <- GenAugData(coord_id, coord_df, fit_lst, covars)

## Treat each site as a distinct factor
res_ef <- EnsemForest(coord_id, aug_df, "site", covars)

ef_hat <- EnsemForest(coord_id, coord_test, "site", covars, is_pred=TRUE,
             myfit=res_ef$myfit, est_leaves=res_ef$est_leaves, honest_y=res_ef$honest_y)

## Mean encoding as surrogate for site index
res_ef <- EnsemForest(coord_id, aug_df, "site", covars, is_encode=TRUE)
ef_hat <- EnsemForest(coord_id, coord_test, "site", covars, is_pred=TRUE, is_encode=TRUE,
             myfit=res_ef$myfit, coord_site_enc=res_ef$coord_site_enc)



data(SimDataLst)
K <- length(SimDataLst)
covars <- grep("^X", names(SimDataLst[[1]]), value=TRUE)
fit_lst <- list()
for (k in 1:K) {
    tmpdf <- SimDataLst[[k]]
    fit_lst[[k]] <- grf::causal_forest(X=as.matrix(tmpdf[, covars, with=FALSE]),
                                      Y=tmpdf$Y, W=tmpdf$Z)
}

coord_id <- 1
coord_df <- SimDataLst[[coord_id]]
aug_df <- GenAugData(coord_id, coord_df, fit_lst, covars)

## dintinct factor (ranger)
myfit <- EnsemForest(coord_id, aug_df, "site", covars)$myfit
PlotForestPred(aug_df, coord_df, coord_id, myfit, "site", covars, "site", "X1")
PlotForestPred(aug_df, coord_df, coord_id, myfit, "site", covars, "X1", "site")
PlotForestPred(aug_df, coord_df, coord_id, myfit, "site", covars, "X1", "X2")

myfit <- EnsemForest(coord_id, aug_df, "site", covars, importance="impurity")$myfit
PlotForestImp(myfit)

BestLinearProj(myfit, coord_df, coord_id, site, "Z", "Y", covars)

class(aug_df[["site"]])
class(aug_df[["X1"]])

## mean encoding (grf)
res_ef <- EnsemForest(coord_id, aug_df, "site", covars, is_encode=TRUE)
myfit <- res_ef$myfit
site_enc_tab <- res_ef$site_enc_tab
PlotForestPred(aug_df, coord_df, coord_id, myfit, "site", covars, "site", "X1", site_enc_tab)
PlotForestPred(aug_df, coord_df, coord_id, myfit, "site", covars, "X1", "site", site_enc_tab)
PlotForestPred(aug_df, coord_df, coord_id, myfit, "site", covars, "X1", "X2", site_enc_tab)

BestLinearProj(myfit, coord_df, coord_id, "site", "Z", "Y", covars, site_enc_tab=site_enc_tab)

PlotForestImp(myfit)

## TREE
res_et <- EnsemTree(coord_id, aug_df, "site", covars)$myfit
myfit <- res_et$myfit
